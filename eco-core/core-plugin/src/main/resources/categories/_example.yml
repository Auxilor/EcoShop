# The ID of the category is the name of the .yml file,
# for example trails.yml has the ID of trails
# You can place categories anywhere in this folder,
# including in subfolders if you want to organize your category configs
# _example.yml is not loaded.

item: diamond_sword name:"&fExample Category" # The item shown in the shop.
lore: [ ] # The lore of the item shown in the shop.
# permission: ecoshop.category.permission1 # (Optional) The permission required to access/use the category.

# Options for the category GUI.
gui:
  rows: 6 # The amount of rows to have (1-6).
  title: "Demo Category" # The title of the GUI.

  # Navigation options, hidden if on the first/last page.
  forwards-arrow:
    item: arrow name:"&fNext Page"
    row: 6
    column: 6
  backwards-arrow:
    item: arrow name:"&fPrevious Page"
    row: 6
    column: 4

  # Add as many pages as you want by appending to this list
  pages:
    - page: 1
      mask:
        items: # The background material
          - gray_stained_glass_pane
          - black_stained_glass_pane
        pattern: # 0 for empty, 1 for the first item, 2 for the second item, etc
          - "222222222"
          - "211111112"
          - "211111112"
          - "211111112"
          - "211111112"
          - "222222222"

      # Custom GUI slots; see here for a how-to: https://plugins.auxilor.io/all-plugins/custom-gui-slots
      custom-slots: [ ]

    - page: 2
      mask:
        items:
          - gray_stained_glass_pane
          - black_stained_glass_pane
        pattern:
          - "222222222"
          - "211111112"
          - "211111112"
          - "211111112"
          - "211111112"
          - "222222222"


items:
  - id: enchanted_diamond # The ID of the item, not shown to players.

    # The item to buy/sell. Must have a quantity of one, so 'stone 16' would not be allowed.
    # https://plugins.auxilor.io/all-plugins/the-item-lookup-system
    item: ecoitems:enchanted_diamond

    # (Optional) The custom display name, will inherit from the GUI item by default.
    name: "&b&k!!&r <gradient:#2193b0>Enchanted Diamond</gradient:#6dd5ed>&r &b&k!!"

    # Options for buying the item, see here:
    # https://plugins.auxilor.io/all-plugins/prices
    buy:
      value: 500 - (%player_rank% * 25)
      type: coins
      display: "$%value%"

      amount: 8 # (Optional) The quick buy / default buy amount. Defaults to 1 if not specified.
      max-at-once: 16 # (Optional) The maximum amount that can be bought at once. Defaults to infinity if not specified.

      buy-message: # (Optional) Enter messages to send to the player when the player buys this specific items. It will still send the 'bought-item/bought-multiple' from lang.yml
        - "&6Thanks for buying this specific item"

    # Options for selling the item, see here:
    # https://plugins.auxilor.io/all-plugins/prices
    sell:
      value: 100 + (%player_rank% * 25)
      type: coins
      display: "$%value%"

      require: "%player_rank% > 1" # (Optional) This expression must hold true to be allowed to sell this item.

      sell-command: # (Optional) Enter commands that should be executed when a player sells items. You can use %player% and %amount% placeholders
        - "give %player% stone %amount%"
      sell-message: # (Optional) Enter messages to send to the player when the player sells this specific items. It will still send the 'sold-item/sold-multiple' from lang.yml
        - "&6Thanks for selling this specific item"
    gui:
      column: 4 # How far left to right (1-9).
      row: 3 # How far up or down (1-6).
      page: 1 # The page.

  - id: iron_rank

    commands: # The commands to execute. You can use %player% and %amount% as placeholders.q
      - lp user %player% parent set iron

    buy:
      value: "%ecomc_iron_price%"
      type: crystals
      display: "&b%value% Crystals ❖"

      require: "%ecomc_iron_price% >= 0" # (Optional) This expression must hold true in order to be allowed to buy the item.

      limit: 1 # (Optional) The max amount of times each player can buy this item, defaults to infinite.
               ## Placeholders: %playerlimit% (Displays player purchase limit) %playerbuys% (Displays amount bought by player).
      global-limit: 10 # (Optional) The max amount of this item that can be bought by all players, defaults to infinite.
                       ## Placeholders: %globallimit% (Displays global purchase limit) %globalbuys% (Displays amount bought globally).

    gui:
      display: # This item is shown in the GUI. If you're selling an item, this defaults to the item itself.
        item: diamond_chestplate
        lore:
          - "&fBuy &7&lIRON&r&f rank to get"
          - "&fthe following benefits:"
          - " &8»&f &eExample Perk"
      column: 5 # The column.
      row: 3 # The row.
      page: 2 # The page.

  - id: valkyrie_egg

    item: ecobosses:valkyrie_spawn_egg

    buy:
      value: 76850
      type: coins
      display: "&a$%value%"

      require: "%actions_allow_bosses_is_met%" # You can use actions to use conditions here! (https://plugins.auxilor.io/actions/placeholderapi)

      max-at-once: 1 # If you want to skip the amount selection GUI, set max at once to 1 so clicking will instant-buy.

    # Instead of having the item be buyable and sellable, you can have
    # two buy options (Buy being left-click, Alt-Buy being right-click).
    # limit / max-at-once, etc. are inherited from the buy options.
    alt-buy:
      value: 65
      type: crystals
      display: "&b%value%❖"

    gui:
      display:
        lore: # You can inherit the item and just add your own extra lore to show additional information.
          - ""
          - "&fExample Lore"
          - ""
        bottom-lore: # You can also add lore to be put under other lore (e.g. price, quick buy/sell info, etc.)
          - ""
          - "&e&oLeft click to buy with money,"
          - "&e&oRight click to buy with &bCrystals ❖&e&o!"
      column: 6 # How far left to right (1-9).
      row: 3 # How far up or down (1-6).
      page: 1 # The page.

      show-quick-buy-sell: false # (Optional) disable quick buy / quick sell text.
